"""
Django settings for belogo_new project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
import environ
from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-qgj-94qz%*=o+4byxx%##qoy*wx$luxs0%_rp$#!i1_!*%)9jt'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['biblioteka-belogo.ru', 'obs-balashiha.ru', '213.141.153.187', '127.0.0.1', '192.168.88.111']

env = environ.Env()
environ.Env.read_env('.env')
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'web',
    'ckeditor',
    'ckeditor_uploader',
    'mptt',
    'crispy_forms',
    'easy_thumbnails',
    'filer',
    'import_export',
    'snowpenguin.django.recaptcha3',
    'rest_framework',
    'email_signals',
    'admin_reorder',
    'nested_admin'
]

RECAPTCHA_PRIVATE_KEY = '6Le7wlkpAAAAAB4RxltG12n2k_atBFuorFbdnsw3'
RECAPTCHA_PUBLIC_KEY = '6Le7wlkpAAAAAAbNKupdMewBL2iEHLeiMsD6KAnT'
RECAPTCHA_DEFAULT_ACTION = 'generic'
RECAPTCHA_SCORE_THRESHOLD = 0.5
RECAPTCHA_LANGUAGE = 'ru'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'admin_reorder.middleware.ModelAdminReorder',
    'django.middleware.gzip.GZipMiddleware',
    'django.middleware.locale.LocaleMiddleware'
]

ROOT_URLCONF = 'belogo_new.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'belogo_new.wsgi.application'

ADMIN_REORDER = (
    # First group
    {'app': 'web', 'label': 'Расписания',
     'models': ('web.CinemaWeek',
                'web.Week',
                'web.WeekCDSCH',
                'web.WeekBER',
                'web.WeekF2',
                'web.WeekF3',
                'web.WeekF4',)
     },

    {'app': 'web', 'label': 'Публикации',
     'models': ('web.News',
                'web.Cinema',
                'web.Event',
                'web.Shedule',
                'web.Document',
                'web.Anons',
                'web.Vacancy',
                'web.FreeService',
                'web.Service',
                )
     },

    {'app': 'web', 'label': 'Электронная библиотека',
     'models': ('web.Library',
                'web.Author',
                'web.LibraryCategory',
                'web.BookView',
                )
     },
    {'app': 'web', 'label': 'Библиотека',
     'models': ('web.Biblioteka',
                'web.Position',
                'web.Employers',
                )
     },

    {'app': 'web', 'label': 'Формы',
     'models': ('web.Book',
                'web.Question',
                'web.Feedback',
                'web.Bookrequest',
                'web.ServiceDop',
                )
     },

    {'app': 'web', 'label': 'РАЗНОЕ',
     'models': ('web.Category',
                'web.ImageGallery',
                'web.Partner',
                'web.Bookrequest',
                'web.Service_dop',
                'web.Raiting',
                'web.TermsOfUse',
                'web.VeteranVOV',
                'web.VeteranTruda',
                'web.LeningradResident',
                'web.HeroMemoryBook',
                )
     },

    {'app': 'email_signals', 'label': 'EMAIL Сигналы',
     'models': ('email_signals.Signal',)
     },
    {'app': 'auth', 'label': 'Пользователи и группы',
     'models': ('auth.User',
                'auth.Group',)
     },
)

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': env("POSTGRES_DB"),
        'USER': env("POSTGRES_USER"),
        'PASSWORD': env("POSTGRES_PASSWORD"),
        'HOST': env("POSTGRES_HOST"),
        'PORT': env("POSTGRES_PORT"),
        'CONN_MAX_AGE': 60 * 10,  # 10 minutes
    }
}


CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://redis-server:6379",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

COMPRESS_CSS_FILTERS = [
    'compressor.filters.css_default.CssAbsoluteFilter',
]

COMPRESS_JS_FILTERS = [
    'compressor.filters.jsmin.JSMinFilter',
]

SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
SESSION_CACHE_ALIAS = 'default'

CELERY_BROKER_URL = 'redis://redis-server:6379'
CELERY_RESULT_BACKEND = 'redis://redis-server:6379'
CELERY_TIMEZONE = 'Europe/Moscow'
USE_TZ = True
CELERY_TASK_TRACK_STARTED = True
CELERY_IMPORTS = ['web.tasks']


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.mail.ru'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'site@biblioteka-belogo.ru'
EMAIL_HOST_PASSWORD = 'wP5maMBAujPAQ0JixUUq'
EMAIL_SIGNAL_DEFAULT_SENDER = 'site@biblioteka-belogo.ru'

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ru-RU'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_L10N = False

USE_TZ = True

FIRST_DAY_OF_WEEK = 1
DATE_INPUT_FORMATS = ['%d.%m.%Y', ]
TIME_INPUT_FORMATS = ['%H:%M', ]

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'static'

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

STATICFILES_DIRS = (
    (BASE_DIR / 'static_dev'),
)

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CKEDITOR_BASEPATH = "/static/ckeditor/ckeditor/"
CKEDITOR_UPLOAD_PATH = 'ck-uploads/'
CKEDITOR_ALLOW_NONIMAGE_FILES = False
CKEDITOR_CONFIGS = {
    'awesome_ckeditor': {
        'toolbar': 'full',
        'allowedContent': True,
        'forcePasteAsPlainText': True
    },
    'default': {
        'toolbar': 'full',
        'allowedContent': True,
        'forcePasteAsPlainText': True
    },
}
